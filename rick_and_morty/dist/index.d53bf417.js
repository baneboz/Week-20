const n="https://rickandmortyapi.com/api/character/?page=1",a=async function(a=n){try{const n=await Promise.race([fetch(a),(e=7,new Promise((function(n,a){setTimeout((function(){a(new Error(`Request took too long! Timeout after ${e} second`))}),1e3*e)})))]),t=await n.json();if(!n.ok)throw new Error(`${t.message} (${n.status}) ðŸ’£ðŸ’£ðŸ’£ `);return t}catch(n){throw n}var e},e={characters:[],info:{},singleCharacter:{}};class t{_data;_clear(){this._containerEl.innerHTML=""}render(n){this._data=n;const a=this._generateMarkup();this._clear(),this._containerEl.insertAdjacentHTML("beforeend",a)}renderSpin(){this._clear(),this._containerEl.insertAdjacentHTML("afterbegin",'<div class="lds-hourglass"></div>')}renderErr(){}}const i=new class extends t{_containerEl=document.querySelector(".cards__container");_generateMarkup(){return this._data.characters.map(this._generateMarkupCards).join("")}_generateMarkupCards(n){return`\n      <figure class="card" data-id="${n.id}">\n        <img\n          src="${n.image}"\n          alt="${n.name} Icon"\n          class="card__image"\n        />\n        <figcaption class="card__caption">\n          <h3 class="card__name">${n.name}</h3>\n          <svg class="like__btn" data-name="like__btn" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 122.88 122.88">\n          <path class="like__btn--1" d="M61.44,0A61.44,61.44,0,1,1,0,61.44,61.44,61.44,0,0,1,61.44,0Z"/>\n          <path class="like__btn--2" d="M32.5,53.39H43.06a2.18,2.18,0,0,1,2.17,2.18V84.52a2.19,2.19,0,0,1-2.17,2.18H32.5a2.19,2.19,0,0,1-2.18-2.18V55.57a2.19,2.19,0,0,1,2.18-2.18ZM60.2,\n          31.68c1.14-5.82,10.66-.46,11.29,8.91a40.41,40.41,0,0,1-.81,9.93H84.29c5.65.23,10.59,4.28,7.1,10.93.8,2.9.92,6.3-1.24,7.65.27,4.57-1,7.41-3.37,9.65A11.42,\n          11.42,0,0,1,85,84.63c-1.83,2.58-3.31,2-6.19,2h-23c-3.64,0-5.62-1-8-4V57C54.72,55.17,58.36,45.8,60.2,39.65v-8Z"/></svg>\n        </figcaption>\n      </figure>\n    `}};const s=new class extends t{_containerEl=document.querySelector(".pagination__list");addHandlerClick(n){this._containerEl.addEventListener("click",(function(a){const e=a.target.closest(".pagination__link");if(!e)return;const t=e.dataset.goto;n(t)}))}_generateMarkup(){const n=this._data.info,a=n.nextPage?n.nextPage.slice(48)-1:n.pagesNum;return n.prevPage?n.nextPage?`\n      <li class="pagination__item pagination__link pagination__link--prev" data-goto="prevPage">\n        <a href="#">&lt; Prev</a>\n      </li>\n      <li class="pagination__item"><p>${a} / ${n.pagesNum}</p></li>\n      <li class="pagination__item pagination__link pagination__link--next"  data-goto="nextPage">\n        <a href="#">Next &gt;</a\n        >\n      </li>\n    `:`\n      <li class="pagination__item pagination__link pagination__link--prev" data-goto="prevPage">\n        <a href="#">&lt; Prev</a>\n      </li>\n      <li class="pagination__item"><p>${a} / ${n.pagesNum}</p></li>\n      <li class="pagination__item pagination__link pagination__link--next disabled"  data-goto="nextPage">\n        <a href="#">Next &gt;</a\n        >\n      </li>\n    `:`\n      <li class="pagination__item pagination__link pagination__link--prev disabled" data-goto="prevPage">\n        <a href="#">&lt; Prev</a>\n      </li>\n      <li class="pagination__item"><p>${a} / ${n.pagesNum}</p></li>\n      <li class="pagination__item pagination__link pagination__link--next"  data-goto="nextPage">\n        <a href="#">Next &gt;</a\n        >\n      </li>\n    `}};const r=new class extends t{_containerEl=document.querySelector(".pagination__go");_btn=this._containerEl.querySelector(".pagination__btn--go");addHandlerClick(n){let a=this._containerEl.querySelector("#pagination__num");this._btn.addEventListener("click",(function(e){e.preventDefault();const t=a.value;t&&(t<1||t>42?alert("Number of page must be between 1 and 42"):(n(t),a.value=""))}))}};const o=new class extends t{_containerEl=document.querySelector(".modal");_modalTargetContainer=document.querySelector(".cards__container");_overlay=document.querySelector(".overlay");addHandlerClick(n){const a=this._containerEl,e=this._overlay;this._closeBtn;this._modalTargetContainer.addEventListener("click",(function(t){const i=t.target.closest(".card");i&&(n(i.dataset.id),a.classList.remove("hidden"),e.classList.remove("hidden"))})),e.addEventListener("click",(function(n){a.classList.add("hidden"),e.classList.add("hidden")}))}_generateMarkup(){const n=this._data.singleCharacter;return console.log(n),`\n      <div class="modal__inner">\n\n        <div class="modal__heading">\n          <img src="${n.image}" alt="${n.name}" />\n        </div>\n\n        <div class="modal__content">\n          <h3>${n.name}</h3>\n          <p>${n.status} | ${n.species} | ${n.gender}</p>\n          <p>\n            <span class="">Place of Origin:</span>\n            <br /> \n            ${n.origin.name}\n          </p>\n          <p>\n            <span class="">\n              Last know Location: \n            </span>\n            <br />\n            ${n.location.name}\n          </p>\n        </div>\n      </div>\n    `}},c=async function(n){i.renderSpin();try{await async function(n){try{const t=await a(n);e.characters=t.results,e.info.pagesNum=t.info.pages,e.info.prevPage=t.info.prev,e.info.nextPage=t.info.next}catch(n){throw n}}(n),i.render(e),s.render(e)}catch(n){console.log(n.message)}},l=function(n){const a=e.info[n];c(a)},d=function(a){const e=n.slice(0,48)+a;c(e)},_=async function(n){try{await async function(n){try{const t=await a("https://rickandmortyapi.com/api/character/"+n);e.singleCharacter=t}catch(n){throw n}}(n),o.render(e)}catch(n){console.log(n)}};c(),s.addHandlerClick(l),r.addHandlerClick(d),o.addHandlerClick(_);
//# sourceMappingURL=index.d53bf417.js.map
